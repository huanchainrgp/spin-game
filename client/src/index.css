@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 0 0% 10%;

  --border: 0 0% 88%;

  --card: 0 0% 96%;

  --card-foreground: 0 0% 10%;

  --card-border: 0 0% 90%;

  --sidebar: 0 0% 94%;

  --sidebar-foreground: 0 0% 10%;

  --sidebar-border: 0 0% 88%;

  --sidebar-primary: 142 65% 35%;

  --sidebar-primary-foreground: 142 20% 98%;

  --sidebar-accent: 140 8% 88%;

  --sidebar-accent-foreground: 140 8% 20%;

  --sidebar-ring: 142 65% 45%;

  --popover: 0 0% 92%;

  --popover-foreground: 0 0% 10%;

  --popover-border: 0 0% 86%;

  --primary: 142 65% 35%;

  --primary-foreground: 142 20% 98%;

  --secondary: 0 0% 88%;

  --secondary-foreground: 0 0% 15%;

  --muted: 0 0% 90%;

  --muted-foreground: 0 0% 40%;

  --accent: 140 6% 86%;

  --accent-foreground: 140 6% 20%;

  --destructive: 0 60% 45%;

  --destructive-foreground: 0 20% 98%;

  --input: 0 0% 75%;
  --ring: 142 65% 45%;
  --chart-1: 142 65% 35%;
  --chart-2: 45 95% 45%;
  --chart-3: 200 70% 40%;
  --chart-4: 280 65% 45%;
  --chart-5: 25 80% 45%;

  --gold: 45 95% 50%;
  --gold-foreground: 45 30% 15%;

  --font-sans: 'Inter', 'Roboto', sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --font-display: 'Bebas Neue', 'Rajdhani', sans-serif;
  --font-decorative: 'Cinzel', serif;
  
  --radius: .5rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.1);
  --shadow-sm: 0px 1px 2px 0px hsl(0 0% 0% / 0.05), 0px 1px 3px -1px hsl(0 0% 0% / 0.1);
  --shadow: 0px 1px 3px 0px hsl(0 0% 0% / 0.1), 0px 1px 2px -1px hsl(0 0% 0% / 0.1);
  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.1), 0px 2px 4px -2px hsl(0 0% 0% / 0.1);
  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.1), 0px 4px 6px -4px hsl(0 0% 0% / 0.1);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.1), 0px 8px 10px -6px hsl(0 0% 0% / 0.1);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.25);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --gold-border: hsl(var(--gold));
  --gold-border: hsl(from hsl(var(--gold)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 15 5% 8%;

  --foreground: 0 0% 98%;

  --border: 15 5% 18%;

  --card: 15 5% 10%;

  --card-foreground: 0 0% 98%;

  --card-border: 15 5% 14%;

  --sidebar: 140 30% 12%;

  --sidebar-foreground: 140 15% 92%;

  --sidebar-border: 140 30% 16%;

  --sidebar-primary: 142 65% 45%;

  --sidebar-primary-foreground: 142 20% 98%;

  --sidebar-accent: 140 30% 18%;

  --sidebar-accent-foreground: 140 20% 88%;

  --sidebar-ring: 142 65% 55%;

  --popover: 140 20% 15%;

  --popover-foreground: 0 0% 95%;

  --popover-border: 140 20% 20%;

  --primary: 142 65% 35%;

  --primary-foreground: 142 20% 98%;

  --secondary: 140 10% 20%;

  --secondary-foreground: 0 0% 92%;

  --muted: 140 8% 18%;

  --muted-foreground: 0 0% 70%;

  --accent: 140 15% 16%;

  --accent-foreground: 0 0% 90%;

  --destructive: 0 60% 45%;

  --destructive-foreground: 0 20% 98%;

  --input: 140 15% 28%;
  --ring: 142 65% 55%;
  --chart-1: 142 65% 55%;
  --chart-2: 45 95% 60%;
  --chart-3: 200 70% 55%;
  --chart-4: 280 65% 60%;
  --chart-5: 25 80% 58%;

  --gold: 45 95% 55%;
  --gold-foreground: 45 20% 10%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.3);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.4);
  --shadow-sm: 0px 1px 2px 0px hsl(0 0% 0% / 0.3), 0px 1px 3px -1px hsl(0 0% 0% / 0.4);
  --shadow: 0px 1px 3px 0px hsl(0 0% 0% / 0.4), 0px 1px 2px -1px hsl(0 0% 0% / 0.4);
  --shadow-md: 0px 4px 6px -1px hsl(0 0% 0% / 0.4), 0px 2px 4px -2px hsl(0 0% 0% / 0.4);
  --shadow-lg: 0px 10px 15px -3px hsl(0 0% 0% / 0.4), 0px 4px 6px -4px hsl(0 0% 0% / 0.4);
  --shadow-xl: 0px 20px 25px -5px hsl(0 0% 0% / 0.5), 0px 8px 10px -6px hsl(0 0% 0% / 0.4);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.6);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  
  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --gold-border: hsl(var(--gold));
  --gold-border: hsl(from hsl(var(--gold)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

/* Additional UI polish: background, animations and small utilities used across components */
@layer base {
  /* layered background that adapts to light/dark via --background H S L triple */
  body {
    background-image: radial-gradient(circle at 10% 10%, rgba(255,255,255,0.03), transparent 10%),
                      radial-gradient(circle at 90% 90%, rgba(0,0,0,0.03), transparent 15%),
                      linear-gradient(180deg, hsl(var(--background)) 0%, hsl(var(--background)) 100%);
    background-attachment: fixed;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  /* Glassy header/cards utility */
  .glass {
    background: linear-gradient(180deg, hsla(var(--popover), 0.55), hsla(var(--card), 0.5));
    backdrop-filter: blur(6px) saturate(120%);
    border: 1px solid hsl(var(--card-border));
  }
}

@layer utilities {
  /* Reel spin animation used by SlotMachine */
  @keyframes spin-reel {
    0% { transform: translateY(-25%) scale(0.98); opacity: 0.9 }
    50% { transform: translateY(25%) scale(1.02); opacity: 1 }
    100% { transform: translateY(-25%) scale(0.98); opacity: 0.9 }
  }
  .animate-spin-reel { animation: spin-reel 0.6s linear infinite; }

  /* Gold pulse for winnings */
  @keyframes pulse-gold {
    0% { transform: scale(1); opacity: 0.9 }
    50% { transform: scale(1.06); opacity: 1 }
    100% { transform: scale(1); opacity: 0.9 }
  }
  .animate-pulse-gold { animation: pulse-gold 1.4s ease-in-out infinite; }

  /* Confetti drop for WinCelebration */
  @keyframes confetti-fall {
    0% { transform: translateY(-10vh) rotate(0deg); opacity: 0 }
    20% { opacity: 1 }
    100% { transform: translateY(110vh) rotate(360deg); opacity: 1 }
  }
  .animate-confetti { animation: confetti-fall 1.8s cubic-bezier(.2,.8,.2,1) forwards; }

  /* Simple slide-up entry animation for feeds */
  @keyframes slide-up {
    0% { transform: translateY(6px); opacity: 0 }
    100% { transform: translateY(0); opacity: 1 }
  }
  .animate-slide-up { animation: slide-up 320ms ease-out both; }

  /* Tiny utility: subtle glow shadow for important elements */
  .glow-gold { box-shadow: 0 6px 30px rgba(251,191,36,0.12), inset 0 1px 0 rgba(255,255,255,0.06); }
}